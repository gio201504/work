<?=
	$this->headLink()
		->prependStylesheet($this->basePath('css/videojs.thumbnails.css'))
    	->prependStylesheet($this->basePath('css/video-js.css'));
	
    $this->headScript()
    	->prependFile($this->basePath('js/hls.js'));
    	//->prependFile($this->basePath('js/videojs.thumbnails.js'))
    	//->prependFile($this->basePath('js/videojs-ie8.min.js'))
    	//->prependFile($this->basePath('js/video.js'));
?>

<script>

$(function(){
// 	var player = videojs('#player');

	debugger;
	var dfd = $.Deferred();
	var promise = dfd.promise();
	
	promise
		.then(function(){ return streamKill(); })
		.then(function(){ return playTranscodedVideo(); })
		.then(function() {
			debugger;
			if (Hls.isSupported()) {
	// 		var config = {
	// 			xhrSetup: function(xhr, url) {
	// 				xhr.withCredentials = true; // do send cookies
	// 				xhr.setRequestHeader('Access-Control-Allow-Credentials', true);
	// 				xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
	// 			}
	// 		};
			var video = document.getElementById('player');
		    var hls = new Hls(/*config*/);
		    //hls.loadSource('http://www.streambox.fr/playlists/x36xhzz/x36xhzz.m3u8');
		    hls.loadSource('http://192.168.0.1:8080/hls/mystream/index.m3u8');
		    //hls.loadSource('rtmp://192.168.0.1:8080/small/mystream');
		    hls.attachMedia(video);
		    hls.on(Hls.Events.MANIFEST_PARSED, function() {
			    debugger;
			    video.play();
		  	});
		}
	});

	dfd.resolve();
	
	//Plugin de génération des thumbnails
// 	player.thumbnails({
// 	      0: {
// 	          src: ''
// 	        }
// 	});

	var addThumb = function(data) {
		player.addThumb(data.time, {
			src: data.file,
			style: {
			      width: '200px',
			    }
	   	});
	};

	//Ecoute position souris sur barre de contrôle
// 	player.on('thumbupdate', function(evt, data) {
// 		var player = this;
// 		var deferred = $.Deferred();
		
// 		//Arrêt streaming en cours
// 		if ($('#toggleButton').hasClass('active')) {
// 			$('#toggleButton').toggleClass('active');
// 			var promise = streamKill();
// 		} else {
// 			var promise = deferred.promise();
// 		}

// 		promise.then(function() {
// 			var video_id = player.el();
	
// 		 	if ($(video_id).data('requestRunning')) {
// 	     		return;
// 	 		} else
// 	 			$(video_id).data('requestRunning', true);
	
// 		 	var settings = data.settings;
// 			var time = $(video_id).find("div.vjs-mouse-display").attr("data-current-time");
// 			var file = $(video_id).find('video source').attr('src');
// 			file = file.replace(/^.*\/\/[^\/]+/, '');
			
// 			getThumbAjax(video_id, file, time, addThumb)
// 				.done(function() {
// 					$(video_id).data('requestRunning', false);
// 				});
// 		});

// 		deferred.resolve();
//     });

    //player.play();
    //playTranscodedVideo(player);

    $("#toggleButton").click(function() {
        if (!$(this).hasClass('active')) {
            var time = player.currentTime();
            var time_seconds = "00:00:" + Math.trunc(time);
            var video_id = player.el();
            var file = $(video_id).find('video source').attr('src');
    		file = file.replace(/^.*\/\/[^\/]+/, '');
            streamVideo(file, time_seconds);
        } else
            streamKill();
    });

//     $(player).on('timeupdate', function() {
//         debugger;
//         playTranscodedVideo(player);
//     });
});

var streamVideo = function(file, time) {
	$.ajax({
        type: "GET",
        url: "streamVideo",
        dataType: "json",
        data: { file: file, time: time },
    });
}

var playTranscodedVideo = function() {
	debugger;
	var time = <?php echo $this->time; ?>;
	var file = "<?php echo $this->path; ?>";
    var time_seconds = "00:00:" + Math.trunc(time);
	file = file.replace(/^.*\/\/[^\/]+/, '');

	return $.ajax({
        type: "GET",
        url: "transcodeVideo",
        dataType: "json",
        data: { file: file, time: time },
    });
}

var streamKill = function() {
	debugger;
	return $.ajax({
        type: "GET",
        url: "streamKill",
        dataType: "json",
    });
}

</script>

<button id='toggleButton' type="button" class="btn btn-default"
	data-toggle="button">Stream video to Ffmpeg</button>

<video id='player' preload="none" class="video-js vjs-default-skin"
	poster="" controls data-type="">
</video>
